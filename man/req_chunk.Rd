% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/req-chunk.R
\name{req_chunk}
\alias{req_chunk}
\title{Chunk a request}
\usage{
req_chunk(req, data, chunk_size, apply_chunk, parse_resp = NULL)
}
\arguments{
\item{req}{A \link{request}.}

\item{data}{The vector to chunk.}

\item{chunk_size}{The size of each chunk.}

\item{apply_chunk}{A function that applies the chunk to the request. It
takes two arguments:
\enumerate{
\item \code{req}: the original request.
\item \code{chunk}: the current data chunk.
}}

\item{parse_resp}{A function with one argument \code{resp} that parses the
response.}
}
\value{
A modified HTTP \link{request}.
}
\description{
Use \code{req_chunk()} to specify how to request a chunk of data.
Use \code{req_perform_multi()} to request all chunks.
If you need more control use a combination of \code{\link[=req_perform]{req_perform()}} and
\code{\link[=req_next_multi]{req_next_multi()}} to iterate through the chunks yourself.
}
\examples{
base_req <- request("https://api.restful-api.dev/objects")

ids <- 1:7
chunk_size <- 3

apply_chunk <- function(req, chunk) {
  chunk <- rlang::set_names(chunk, "id")
  req_url_query(req, !!!chunk)
}

parse_resp <- function(resp) {
  parsed <- resp_body_json(resp)
  data.frame(
    id = sapply(parsed, function(x) x$id),
    name = sapply(parsed, function(x) x$name)
  )
}

\dontrun{
req <- req_chunk(
  base_req,
  chunk_size = 3,
  data = ids,
  apply_chunk = apply_chunk,
  parse_resp = parse_resp
)

responses <- req_perform_multi(req)
}
}
