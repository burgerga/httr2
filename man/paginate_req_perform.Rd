% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginate.R
\name{paginate_req_perform}
\alias{paginate_req_perform}
\alias{paginate_req_perform_continue}
\alias{paginate_next_request}
\title{Perform a paginated request}
\usage{
paginate_req_perform(req, max_pages = 20L, progress = TRUE)

paginate_req_perform_continue(max_pages = NULL)

paginate_next_request(resp, req)
}
\arguments{
\item{req}{A \link{request}.}

\item{max_pages}{The maximum number of pages to request.}

\item{progress}{Display a progress bar?}

\item{resp}{An HTTP \link{response}.}
}
\value{
A list of responses.
}
\description{
After preparing a paginated request with \code{\link[=req_paginate]{req_paginate()}} perform it with
\code{\link[=paginate_req_perform]{paginate_req_perform()}}. In case the requests were interrupted, you can
get the intermediate results with \code{\link[=last_pagination_responses]{last_pagination_responses()}} or
continue with \link{paginate_req_perform_continue}.
}
\examples{
page_size <- 150

req_pokemon <- request("https://pokeapi.co/api/v2/pokemon") \%>\%
  req_url_query(limit = page_size) \%>\%
  req_paginate_next_url(
    next_url = function(resp) resp_body_json(resp)[["next"]],
    n_pages = function(resp) {
      total <- resp_body_json(resp)$count
      ceiling(total / page_size)
    }
  )

responses <- paginate_req_perform(req_pokemon)
}
